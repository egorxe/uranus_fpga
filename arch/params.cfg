[FPGA]
########################################################################
### General defines
########################################################################

FPGA_FABRIC_SIZE_X  = 4
FPGA_FABRIC_SIZE_Y  = 9

FPGA_LUT_WIDTH      = 4
FPGA_LUT_SIZE       = (2**FPGA_LUT_WIDTH)

CELL_INPUTS         = FPGA_LUT_WIDTH
CELL_OUTPUTS        = 1

CELLS_PER_BLOCK     = 8
BLOCK_INPUTS        = (CELLS_PER_BLOCK * CELL_INPUTS)
BLOCK_OUTPUTS       = (CELLS_PER_BLOCK * CELL_OUTPUTS)
LOGIC_BLOCKS        = (FPGA_FABRIC_SIZE_X-2)*(FPGA_FABRIC_SIZE_Y-2)

########################################################################
# Geometry derived defines
########################################################################

FABRIC_BLOCKS_X    = FPGA_FABRIC_SIZE_X-2
FABRIC_BLOCKS_Y    = FPGA_FABRIC_SIZE_Y-2

FABRIC_VROUTE_X    = FPGA_FABRIC_SIZE_X-1
FABRIC_VROUTE_Y    = FPGA_FABRIC_SIZE_Y-2
FABRIC_HROUTE_X    = FPGA_FABRIC_SIZE_X-2
FABRIC_HROUTE_Y    = FPGA_FABRIC_SIZE_Y-1

########################################################################
# Routing defines
########################################################################

TRACKS_PER_RNODE    = 16
TOTAL_TRACKS        = (TRACKS_PER_RNODE * 2)
BLOCK_SIDES         = 4
MUX_PER_CLASS       = 1
BLOCK_OUT_PERSIDE   = (BLOCK_OUTPUTS / BLOCK_SIDES)
BLOCK_IN_PERSIDE    = (BLOCK_INPUTS / BLOCK_SIDES)

BLOCK_L_MUX_START   = 0
BLOCK_R_MUX_START   = (BLOCK_L_MUX_START+BLOCK_OUT_PERSIDE)
FORWARD_MUX_START   = (BLOCK_R_MUX_START+BLOCK_OUT_PERSIDE)
LEFT_MUX_START      = (FORWARD_MUX_START+MUX_PER_CLASS)
RIGHT_MUX_START     = (LEFT_MUX_START+MUX_PER_CLASS)

CELL_LUT_MUX_START  = 0
CELL_IN_MUX_START   = (CELL_LUT_MUX_START+CELLS_PER_BLOCK)

BLK_MUX_UP_START    = 0
BLK_MUX_DOWN_START  = TRACKS_PER_RNODE
BLK_MUX_LEFT_START  = 0
BLK_MUX_RIGHT_START = TRACKS_PER_RNODE

########################################################################
# Mux defines
########################################################################

BLOCK_CROSS_MUXES       = (CELL_INPUTS*CELLS_PER_BLOCK)
LBCROSS_INPUTS          = (BLOCK_INPUTS / FPGA_LUT_WIDTH)
LBCROSS_MUX_STATE_WDT   = 4

BLOCK_IN_MUXES_COEF     = 8
BLOCK_INPUTS_MUXES      = (TOTAL_TRACKS / BLOCK_IN_MUXES_COEF)
BINPUT_MUX_STATE_WDT    = 2

RNODE_MUX_STATE_WDT     = 3
# up/left block out, down/right block out, forward, left, right
RNODE_INPUTS            = (3 + BLOCK_OUT_PERSIDE*2)


########################################################################
# Memory defines
########################################################################

MEMORY_STARTX       = 400
MEMORY_REPEATX      = 5
MEMORY_SIZE_X       = 1
MEMORY_SIZE_Y       = 1
MEMORY_WIDTH        = 8
MEMORY_DEPTH        = 7
MEMORY_SIZE         = 2**MEMORY_DEPTH

########################################################################
# IO defines
########################################################################

FABRIC_IO_PADS      = (FPGA_FABRIC_SIZE_X+FPGA_FABRIC_SIZE_Y)*2 - 8

PINS_PER_PAD        = 8

FABRIC_IO           = FABRIC_IO_PADS * PINS_PER_PAD

LEFT_IO             = (FPGA_FABRIC_SIZE_Y-2) * PINS_PER_PAD
UP_IO               = (FPGA_FABRIC_SIZE_X-2) * PINS_PER_PAD
RIGHT_IO            = (FPGA_FABRIC_SIZE_Y-2) * PINS_PER_PAD
DOWN_IO             = (FPGA_FABRIC_SIZE_X-2) * PINS_PER_PAD

LEFT_IO_START       = 0
UP_IO_START         = (LEFT_IO_START + LEFT_IO)
RIGHT_IO_START      = (UP_IO_START + UP_IO)
DOWN_IO_START       = (RIGHT_IO_START + RIGHT_IO)

LEFT_IO_END         = (LEFT_IO)
UP_IO_END           = (LEFT_IO_END + UP_IO)
RIGHT_IO_END        = (UP_IO_END + RIGHT_IO)
DOWN_IO_END         = (RIGHT_IO_END + DOWN_IO)

MAX_IO_PINS         = FABRIC_IO

########################################################################
# Config size defines
########################################################################

CELL_CONFIG_SIZE        = (FPGA_LUT_SIZE + 1)
BLKMUX_CONFIG_SIZE      = (BLOCK_CROSS_MUXES*LBCROSS_MUX_STATE_WDT)
BLOCK_CONFIG_SIZE       = ((CELL_CONFIG_SIZE*CELLS_PER_BLOCK) + BLKMUX_CONFIG_SIZE)
RNODE_CONFIG_SIZE       = (RNODE_MUX_STATE_WDT * TRACKS_PER_RNODE)

BLOCK_CFGCHAIN_LEN      = (BLOCK_CONFIG_SIZE + BINPUT_MUX_STATE_WDT*BLOCK_INPUTS)*FABRIC_BLOCKS_Y
VRNODE_CFGCHAIN_LEN     = (BINPUT_MUX_STATE_WDT*2*PINS_PER_PAD + FABRIC_VROUTE_X * RNODE_CONFIG_SIZE * 2)
HRNODE_CFGCHAIN_LEN     = (BINPUT_MUX_STATE_WDT*2*PINS_PER_PAD + FABRIC_HROUTE_Y * RNODE_CONFIG_SIZE * 2)

CONFIG_CHAINS_BLOCK     = FABRIC_BLOCKS_X
CONFIG_CHAINS_HRNODE    = FABRIC_HROUTE_X
CONFIG_CHAINS_VRNODE    = FABRIC_VROUTE_Y

########################################################################
## Implementation target defines
########################################################################

#TARGET_TECHNOLOGY   = "SIMU_BEHA_VIOR"
#TARGET_TECHNOLOGY   = "ASIC_SKWT_130D"
TARGET_TECHNOLOGY   = "ASIC_GF_180C"


########################################################################
## FPGA source codes
########################################################################
[SOURCES]

SRC_LIST_COMMON     = [ "fpga_params_pkg.vhd", "fpga_pkg.vhd" ]
SRC_LIST_TECH_LB    = [ "fpga_tech.v" ]
SRC_LIST_LB         = SRC_LIST_COMMON + [ "fpga_lut.vhd", "fpga_cfg_shiftreg.vhd", "fpga_logic_cell.vhd", "fpga_routing_mux.vhd", "fpga_logic_block.vhd", "fpga_routing_mux_wcfg.vhd", "fpga_struct_block.vhd" ]
SRC_LIST_TECH_RN    = [ "fpga_tech.v" ]
SRC_LIST_RN         = SRC_LIST_COMMON + [ "fpga_routing_mux.vhd", "fpga_routing_node.vhd", "fpga_cfg_shiftreg.vhd", "fpga_routing_node_wcfg.vhd" ]
SRC_LIST_TECH_FABRIC= [ ] + SRC_LIST_TECH_RN
SRC_LIST_FABRIC     = SRC_LIST_COMMON + SRC_LIST_RN + [ "fpga_cfg_shiftreg.vhd", "fpga_routing_mux.vhd", "fpga_routing_mux_wcfg.vhd", "fpga_io_mux.vhd", "fpga_fabric.vhd" ]
SRC_LIST_TECH_FPGA  = SRC_LIST_TECH_LB + SRC_LIST_TECH_RN + SRC_LIST_TECH_FABRIC 
SRC_LIST_FPGA       = SRC_LIST_LB + SRC_LIST_RN + SRC_LIST_FABRIC
SRC_LIST_FPGATB     = []
SRC_LIST_FPGALOADER = SRC_LIST_FPGA + ["tb/fpga_tb_pkg.vhd", "tb/fpga_config_sender.vhd" ]

SRC_LIST_ARIEL      = SRC_LIST_FABRIC + ["wishbone_pkg.vhd", "wb_register32.vhd","wb_arbiter_sync.vhd", "fpga_fw_loader.vhd", "ariel_fpga_top.vhd"]
SRC_LIST_TECH_ARIEL = SRC_LIST_TECH_FPGA + ["user_project_wrapper.v"]


########################################################################
## Fabrication technology parameters
########################################################################
[ASIC_SKWT_130D]

TECH_NODE           = 130

# model files
TECH_MODELS_LIST    = [ "models/primitives.v", "models/sky130_fd_sc_hd.v" ]

# times in ps
TECH_REG_SETUP      = 120
TECH_REG_HOLD       = 50
TECH_REG_CLK2Q      = 400

TECH_GATE_DELAY     = 350
TECH_ROUTE_DELAY    = 50

TECH_LB_CLKSKEW     = 70
TECH_FABRIC_CLKSKEW = 300

TECH_LUT_LEVELS     = 2
TECH_LUT_DELAY      = (TECH_LUT_LEVELS * TECH_GATE_DELAY)

TECH_LBCROSS_LEVELS = 7
TECH_LBCROSS_DELAY  = (TECH_LBCROSS_LEVELS * TECH_GATE_DELAY) + 2*TECH_ROUTE_DELAY

TECH_LBOUT_LEVELS   = 2
TECH_LBOUT_DELAY    = (TECH_LBOUT_LEVELS * TECH_GATE_DELAY) + 4*TECH_ROUTE_DELAY

TECH_RNODE_LEVELS   = 2
TECH_RNODE_DELAY    = (TECH_RNODE_LEVELS * TECH_GATE_DELAY) + 2*TECH_ROUTE_DELAY
TECH_RSEGM_DELAY    = 7*TECH_ROUTE_DELAY

TECH_BINPUT_LEVELS  = 2
#TECH_BINPUT_DELAY   = (TECH_BINPUT_LEVELS * TECH_GATE_DELAY) + 20*TECH_ROUTE_DELAY
TECH_BINPUT_DELAY   = 7*TECH_ROUTE_DELAY

TECH_BOUTPUT_DELAY  = 1*TECH_ROUTE_DELAY

TECH_IOIN_DELAY     = 20*TECH_ROUTE_DELAY    
TECH_IOOUT_DELAY    = (TECH_BINPUT_LEVELS * TECH_GATE_DELAY) + 30*TECH_ROUTE_DELAY

[ASIC_GF_180C]

TECH_NODE           = 180

# model files
TECH_MODELS_LIST    = [ "models/primitives.v" ]

# times in ps
TECH_REG_SETUP      = 120
TECH_REG_HOLD       = 50
TECH_REG_CLK2Q      = 400

TECH_GATE_DELAY     = 1000
TECH_ROUTE_DELAY    = 200

TECH_LB_CLKSKEW     = 70
TECH_FABRIC_CLKSKEW = 300

TECH_LUT_LEVELS     = 2
TECH_LUT_DELAY      = (TECH_LUT_LEVELS * TECH_GATE_DELAY)

TECH_LBCROSS_LEVELS = 7
TECH_LBCROSS_DELAY  = (TECH_LBCROSS_LEVELS * TECH_GATE_DELAY) + 2*TECH_ROUTE_DELAY

TECH_LBOUT_LEVELS   = 2
TECH_LBOUT_DELAY    = (TECH_LBOUT_LEVELS * TECH_GATE_DELAY) + 4*TECH_ROUTE_DELAY

TECH_RNODE_LEVELS   = 2
TECH_RNODE_DELAY    = (TECH_RNODE_LEVELS * TECH_GATE_DELAY) + 2*TECH_ROUTE_DELAY
TECH_RSEGM_DELAY    = 7*TECH_ROUTE_DELAY

TECH_BINPUT_LEVELS  = 2
#TECH_BINPUT_DELAY   = (TECH_BINPUT_LEVELS * TECH_GATE_DELAY) + 20*TECH_ROUTE_DELAY
TECH_BINPUT_DELAY   = 7*TECH_ROUTE_DELAY

TECH_BOUTPUT_DELAY  = 1*TECH_ROUTE_DELAY

TECH_IOIN_DELAY     = 20*TECH_ROUTE_DELAY    
TECH_IOOUT_DELAY    = (TECH_BINPUT_LEVELS * TECH_GATE_DELAY) + 30*TECH_ROUTE_DELAY

[SIMU_BEHA_VIOR]
# bogus

# model files
TECH_MODELS_LIST    = [ ]

TECH_NODE           = 90

# times in ps
TECH_REG_SETUP      = 100
TECH_REG_CLK2Q      = 150

TECH_GATE_DELAY     = 65
TECH_ROUTE_DELAY    = 25

TECH_LUT_LEVELS     = 2
TECH_LUT_DELAY      = (TECH_LUT_LEVELS * TECH_GATE_DELAY)

TECH_LBCROSS_LEVELS = 10
TECH_LBCROSS_DELAY  = (TECH_LBCROSS_LEVELS * TECH_GATE_DELAY) + 2*TECH_ROUTE_DELAY

TECH_LBOUT_LEVELS   = 1
TECH_LBOUT_DELAY    = (TECH_LBOUT_LEVELS * TECH_GATE_DELAY) + 3*TECH_ROUTE_DELAY

TECH_RNODE_LEVELS   = 2
TECH_RNODE_DELAY    = (TECH_RNODE_LEVELS * TECH_GATE_DELAY) + 1*TECH_ROUTE_DELAY
TECH_RSEGM_DELAY    = 3*TECH_ROUTE_DELAY

TECH_BINPUT_LEVELS  = 4
TECH_BINPUT_DELAY   = (TECH_BINPUT_LEVELS * TECH_GATE_DELAY) + 3*TECH_ROUTE_DELAY

TECH_BOUTPUT_DELAY  = 3*TECH_ROUTE_DELAY

TECH_IOIN_DELAY      = 5*TECH_ROUTE_DELAY
TECH_IOOUT_DELAY     = (TECH_BINPUT_LEVELS * TECH_GATE_DELAY) + 5*TECH_ROUTE_DELAY
